import { execSync } from "child_process";
import { OpenAI } from "openai";
import chalk from "chalk";
import fs from "fs";

// ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ OpenAI API
const openai = new OpenAI({
    apiKey: process.env.OPENROUTER_API_KEY,
    baseURL: "https://openrouter.ai/api/v1", // https://api.openai.com/v1
});

(async () => {
    try {
        const startTime = Date.now();

        // ‡∏î‡∏∂‡∏á diff ‡∏Ç‡∏≠‡∏á commit ‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î
        const diff = execSync("git diff --unified=0 HEAD~1 HEAD").toString().trim();


        if (!diff) {
            console.log("‚úÖ ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏£‡∏µ‡∏ß‡∏¥‡∏ß");
            process.exit(0);
        }

        console.log(chalk.green("üîç AI Reviewing Commit..."));

        // ‡∏î‡∏∂‡∏á‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÇ‡∏Ñ‡πâ‡∏î‡∏ó‡∏µ‡πà‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏´‡∏£‡∏∑‡∏≠‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á
        const changedLines = diff
            .split("\n")
            .filter(line => line.startsWith("+") && !line.startsWith("+++")) // ‡∏ï‡∏±‡∏î header diff
            .map(line => line.substring(1)) // ‡∏ï‡∏±‡∏î `+` ‡∏≠‡∏≠‡∏Å
            .join("\n")
            .trim();

        if (!changedLines) {
            console.log("‚úÖ ‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÇ‡∏Ñ‡πâ‡∏î‡πÉ‡∏´‡∏°‡πà‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏£‡∏µ‡∏ß‡∏¥‡∏ß");
            process.exit(0);
        }


        // ‡∏™‡πà‡∏á‡πÇ‡∏Ñ‡πâ‡∏î‡πÑ‡∏õ‡πÉ‡∏´‡πâ AI ‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå
        const response = await openai.chat.completions.create({
            model: "anthropic/claude-3.5-sonnet", // deepseek/deepseek-r1-distill-llama-70b
            messages: [
                { role: "system", content: "‡∏Ñ‡∏∏‡∏ì‡∏Ñ‡∏∑‡∏≠‡πÇ‡∏Ñ‡πâ‡∏î‡∏£‡∏µ‡∏ß‡∏¥‡∏ß AI ‡∏ó‡∏µ‡πà‡∏ä‡πà‡∏ß‡∏¢‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏Ñ‡∏∏‡∏ì‡∏†‡∏≤‡∏û‡πÇ‡∏Ñ‡πâ‡∏î ‡∏Å‡∏£‡∏∞‡∏ä‡∏±‡∏ö ‡∏ï‡∏£‡∏á‡∏õ‡∏£‡∏∞‡πÄ‡∏î‡πá‡∏ô‡πÅ‡∏•‡∏∞‡∏à‡∏∞‡∏ï‡∏≠‡∏ö‡πÄ‡∏õ‡πá‡∏ô‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢" },
                { role: "user", content: `‡πÇ‡∏õ‡∏£‡∏î‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÅ‡∏•‡∏∞‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á‡πÇ‡∏Ñ‡πâ‡∏î‡∏ô‡∏µ‡πâ:\n\n${changedLines}` },
            ],
            temperature: 0.1,
        });

        // ‡∏î‡∏∂‡∏á‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡∏à‡∏≤‡∏Å AI
        const review           = response.choices[0].message?.content || "AI ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡πÇ‡∏Ñ‡πâ‡∏î‡∏ô‡∏µ‡πâ‡πÑ‡∏î‡πâ";
        const modelUsed        = response.model;
        const totalTokens      = response.usage?.total_tokens || 0;
        const promptTokens     = response.usage?.prompt_tokens || 0;
        const completionTokens = response.usage?.completion_tokens || 0;

        // ‡πÅ‡∏õ‡∏•‡∏á Token ‡πÄ‡∏õ‡πá‡∏ô USD ‡∏ï‡∏≤‡∏°‡∏≠‡∏±‡∏ï‡∏£‡∏≤‡∏Ñ‡πà‡∏≤‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏Ç‡∏≠‡∏á OpenAI
        const costPer1kTokens = 0.01;
        const costInUSD = (totalTokens / 1000) * costPer1kTokens;

        console.log(chalk.green("\nüöÄ AI Review Suggestions:\n"));
        console.log(review);

        // ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ
        const elapsedTime = (Date.now() - startTime) / 1000;
        let elapsedTimeFormatted = `${elapsedTime.toFixed(2)} ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ`;
        if (elapsedTime > 60) {
            elapsedTimeFormatted = `${(elapsedTime / 60).toFixed(2)} ‡∏ô‡∏≤‡∏ó‡∏µ`;
        }

        console.log("\n");
        console.log(chalk.whiteBright(`‚è≥ ‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏£‡∏µ‡∏ß‡∏¥‡∏ß: ${elapsedTimeFormatted}`));
        console.log(chalk.whiteBright(`üìå Model ‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ: ${modelUsed}`));
        console.log(chalk.whiteBright(`üî¢ ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô Token ‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ: ${totalTokens} tokens`));
        console.log(chalk.whiteBright(`üí≤ ‡∏Ñ‡πà‡∏≤‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢‡∏Ç‡∏≠‡∏á ‡∏Ç‡∏≤‡πÄ‡∏Ç‡πâ‡∏≤ Prompt: $${(promptTokens / 1000 * costPer1kTokens).toFixed(6)} USD`));
        console.log(chalk.whiteBright(`üí≤ ‡∏Ñ‡πà‡∏≤‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢‡∏Ç‡∏≠‡∏á ‡∏Ç‡∏≤‡∏≠‡∏≠‡∏Å Completion: $${(completionTokens / 1000 * costPer1kTokens).toFixed(6)} USD`));
        console.log(chalk.whiteBright(`üí≤ ‡∏Ñ‡πà‡∏≤‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î: $${costInUSD.toFixed(6)} USD`));

        // ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏•‡∏á‡πÑ‡∏ü‡∏•‡πå
        const filePath = `./review/commit-review-${new Date().getTime()}.log`;
        fs.writeFileSync(filePath, review, { encoding: "utf-8" });
        console.log(chalk.green(`‚úÖ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å AI Review ‡∏•‡∏á‡πÑ‡∏ü‡∏•‡πå ${filePath} ‡πÅ‡∏•‡πâ‡∏ß`));

        process.exit(0);
    } catch (err) {
        console.error("‚ùå Error:", err);
        process.exit(1);
    }
})();
